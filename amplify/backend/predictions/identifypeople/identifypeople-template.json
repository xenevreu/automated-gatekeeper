{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "{\"createdOn\":\"Mac\",\"createdBy\":\"Amplify\",\"createdWith\":\"7.6.24\",\"stackType\":\"predictions-Rekognition\",\"metadata\":{}}",
  "Parameters": {
    "resourceName": {
      "Type": "String"
    },
    "identifyPolicyName": {
      "Type": "String"
    },
    "access": {
      "Type": "String"
    },
    "authRoleName": {
      "Type": "String"
    },
    "unauthRoleName": {
      "Type": "String"
    },
    "adminAuthProtected": {
      "Type": "String"
    },
    "adminGuestProtected": {
      "Type": "String"
    },
    "identifyType": {
      "Type": "String"
    },
    "celebrityDetectionEnabled": {
      "Type": "String"
    },
    "adminTask": {
      "Type": "String"
    },
    "maxEntities": {
      "Type": "Number"
    },
    "folderPolicies": {
      "Type": "String"
    },
    "env": {
      "Type": "String"
    },
    "functionRekognitionIndexFacesTriggerc5dc3534Name": {
      "Type": "String",
      "Default": "functionRekognitionIndexFacesTriggerc5dc3534Name"
    },
    "functionRekognitionIndexFacesTriggerc5dc3534Arn": {
      "Type": "String",
      "Default": "functionRekognitionIndexFacesTriggerc5dc3534Arn"
    },
    "functionRekognitionIndexFacesTriggerc5dc3534LambdaExecutionRole": {
      "Type": "String",
      "Default": "functionRekognitionIndexFacesTriggerc5dc3534LambdaExecutionRole"
    },
    "storageimagestorageBucketName": {
      "Type": "String",
      "Default": "storageimagestorageBucketName"
    }
  },
  "Conditions": {
    "CreateAdminAuthProtected": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "adminAuthProtected"
            },
            "DISALLOW"
          ]
        }
      ]
    },
    "CreateAdminGuestProtected": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "adminGuestProtected"
            },
            "DISALLOW"
          ]
        }
      ]
    },
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    },
    "AuthGuestRoleAccess": {
      "Fn::Equals": [
        {
          "Ref": "access"
        },
        "authAndGuest"
      ]
    }
  },
  "Outputs": {
    "region": {
      "Value": {
        "Fn::FindInMap": [
          "RegionMapping",
          {
            "Ref": "AWS::Region"
          },
          {
            "Ref": "identifyType"
          }
        ]
      }
    },
    "collectionId": {
      "Value": {
        "Fn::If": [
          "ShouldNotCreateEnvResources",
          {
            "Ref": "resourceName"
          },
          {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "resourceName"
                },
                "-",
                {
                  "Ref": "env"
                }
              ]
            ]
          }
        ]
      }
    },
    "celebrityDetectionEnabled": {
      "Value": {
        "Ref": "celebrityDetectionEnabled"
      }
    },
    "maxEntities": {
      "Value": {
        "Ref": "maxEntities"
      }
    }
  },
  "Resources": {
    "S3AuthPredicitionsAdminProtectedPolicy": {
      "Condition": "CreateAdminAuthProtected",
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "S3RekognitionAuthAdminFolderAccess",
        "Roles": [
          {
            "Ref": "authRoleName"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "storageimagestorageBucketName"
                      },
                      "/protected/predictions/index-faces/${cognito-identity.amazonaws.com:sub}/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "S3GuestPredicitionsAdminPublicPolicy": {
      "Condition": "CreateAdminGuestProtected",
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "S3RekognitionGuestAdminFolderAccess",
        "Roles": [
          {
            "Ref": "unauthRoleName"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:DeleteObject",
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "storageimagestorageBucketName"
                      },
                      "/protected/predictions/index-faces/${cognito-identity.amazonaws.com:sub}/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "LambdaRekognitionAccessPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "amplify-lambda-execution-rekognition-policy",
        "Roles": [
          {
            "Ref": "functionRekognitionIndexFacesTriggerc5dc3534LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "rekognition:ListFaces",
                "rekognition:IndexFaces",
                "rekognition:DeleteFaces"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:rekognition:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      "collection/",
                      {
                        "Fn::If": [
                          "ShouldNotCreateEnvResources",
                          {
                            "Ref": "resourceName"
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Ref": "resourceName"
                                },
                                "-",
                                {
                                  "Ref": "env"
                                }
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "CollectionCreationFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "const response = require('cfn-response');",
                "const aws = require('aws-sdk');",
                "let responseData = {};",
                "exports.handler = function(event, context) {",
                "  try {",
                "    if (event.RequestType == 'Delete') {",
                "        let params = {",
                "           CollectionId: event.ResourceProperties.collectionId",
                "        };",
                "        const rekognition = new aws.Rekognition({ apiVersion: '2016-06-27', region: event.ResourceProperties.region });",
                "        rekognition.deleteCollection(params).promise()",
                "        .then((res) => {",
                "        console.log(\"delete\" + res);",
                "        console.log(\"response data\" + JSON.stringify(res));",
                "        response.send(event, context, response.SUCCESS, res);",
                "     });",
                "    }",
                "    if (event.RequestType == 'Update' || event.RequestType == 'Create') {",
                "       const collectionId = event.ResourceProperties.collectionId;",
                "       const params = {",
                "          CollectionId: collectionId",
                "       };",
                "       const rekognition = new aws.Rekognition({ apiVersion: '2016-06-27', region: event.ResourceProperties.region });",
                "       rekognition.listCollections({}).promise()",
                "       .then((res) => {",
                "       let {CollectionIds} = res;",
                "       console.log(\"CollectionIds\" + CollectionIds);",
                "       if(CollectionIds.indexOf(collectionId) !== -1) {",
                "         response.send(event, context, response.SUCCESS, responseData);",
                "       } else {",
                "           rekognition.createCollection(params).promise()",
                "           .then((res1) => {",
                "           responseData = res1;",
                "           console.log(\"responseData\" + JSON.stringify(responseData)); console.log(collectionId);",
                "           let s3 = new aws.S3();",
                "           let params = {",
                "           Bucket: event.ResourceProperties.bucketName,",
                "           Key: \"protected/predictions/index-faces/admin/\"",
                "           };",
                "           s3.putObject(params).promise()",
                "           .then((s3Res) => {",
                "           if (s3Res.ETag) {",
                "               response.send(event, context, response.SUCCESS, responseData);",
                "           }",
                "           else {",
                "           response.send(event, context, response.FAILED, s3Res);",
                "           }",
                "           });",
                "       });",
                "    }",
                "    });",
                "    }",
                "  } catch(err) {",
                "       console.log(err.stack);",
                "       responseData = {Error: err};",
                "       response.send(event, context, response.FAILED, responseData);",
                "       throw err;",
                "  }",
                "};"
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "Role": {
          "Fn::GetAtt": [
            "CollectionsLambdaExecutionRole",
            "Arn"
          ]
        }
      }
    },
    "CollectionFunctionOutputs": {
      "Type": "Custom::LambdaCallout",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CollectionCreationFunction",
            "Arn"
          ]
        },
        "region": {
          "Ref": "AWS::Region"
        },
        "collectionId": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            {
              "Ref": "resourceName"
            },
            {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "resourceName"
                  },
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "bucketName": {
          "Ref": "storageimagestorageBucketName"
        }
      }
    },
    "CollectionsLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            {
              "Ref": "resourceName"
            },
            {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "resourceName"
                  },
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Ref": "resourceName"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          },
          {
            "PolicyName": {
              "Ref": "identifyPolicyName"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "rekognition:CreateCollection",
                    "rekognition:DeleteCollection",
                    "s3:PutObject"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:rekognition:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":",
                          "collection/",
                          {
                            "Fn::If": [
                              "ShouldNotCreateEnvResources",
                              {
                                "Ref": "resourceName"
                              },
                              {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Ref": "resourceName"
                                    },
                                    "-",
                                    {
                                      "Ref": "env"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "storageimagestorageBucketName"
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "rekognition:ListCollections"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "IdentifyEntitiesSearchFacesPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "identifyPolicyName"
              },
              "-",
              "searchFaces"
            ]
          ]
        },
        "Roles": {
          "Fn::If": [
            "AuthGuestRoleAccess",
            [
              {
                "Ref": "authRoleName"
              },
              {
                "Ref": "unauthRoleName"
              }
            ],
            [
              {
                "Ref": "authRoleName"
              }
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "rekognition:SearchFacesByImage"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:rekognition:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      "collection/",
                      {
                        "Fn::If": [
                          "ShouldNotCreateEnvResources",
                          {
                            "Ref": "resourceName"
                          },
                          {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Ref": "resourceName"
                                },
                                "-",
                                {
                                  "Ref": "env"
                                }
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "IdentifyEntitiesPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Ref": "identifyPolicyName"
        },
        "Roles": {
          "Fn::If": [
            "AuthGuestRoleAccess",
            [
              {
                "Ref": "authRoleName"
              },
              {
                "Ref": "unauthRoleName"
              }
            ],
            [
              {
                "Ref": "authRoleName"
              }
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "rekognition:DetectFaces",
                "rekognition:RecognizeCelebrities"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    }
  },
  "Mappings": {
    "RegionMapping": {
      "us-east-1": {
        "identifyEntities": "us-east-1"
      },
      "us-east-2": {
        "identifyEntities": "us-east-2"
      },
      "us-west-1": {
        "identifyEntities": "us-west-1"
      },
      "us-west-2": {
        "identifyEntities": "us-west-2"
      },
      "ca-central-1": {
        "identifyEntities": "ca-central-1"
      },
      "eu-west-1": {
        "identifyEntities": "eu-west-1"
      },
      "eu-west-2": {
        "identifyEntities": "eu-west-2"
      },
      "eu-west-3": {
        "identifyEntities": "eu-west-1"
      },
      "eu-central-1": {
        "identifyEntities": "eu-central-1"
      },
      "eu-north-1": {
        "identifyEntities": "eu-central-1"
      },
      "ap-northeast-1": {
        "identifyEntities": "ap-northeast-1"
      },
      "ap-northeast-2": {
        "identifyEntities": "ap-northeast-2"
      },
      "ap-southeast-1": {
        "identifyEntities": "ap-southeast-1"
      },
      "ap-southeast-2": {
        "identifyEntities": "ap-southeast-2"
      },
      "ap-south-1": {
        "identifyEntities": "ap-south-1"
      },
      "me-south-1": {
        "identifyEntities": "ap-south-1"
      },
      "sa-east-1": {
        "identifyEntities": "us-east-1"
      }
    }
  }
}